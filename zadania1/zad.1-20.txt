1. Write a Python program to calculate the length of a string.
string ="Niedziela"
string_len=len(string)
print(string)
print("long of string: ", string_len)
2. Write a Python program to count the number of characters (character frequency) in a string.
str1="rewolwer"
def char_frequency(str1):
    dict = {}
    for n in str1:
        keys = dict.keys()
        if n in keys:
            dict[n] += 1
        else:
            dict[n] = 1
    return dict
print(str1) 
print(char_frequency(str1)) 

3. Write a Python program to display a number with a comma separator.
number= 94000
print("Orginal Number: ", number)
print("Formatted Number with comma separator: "+"{:,}".format(number))

4. Write a Python program to format a number with a percentage.
number=0.23
print("Orginal Number: ", number)
print("Number with percent: "+"{:.2%}".format(number))

5.Write a Python program to count and display vowels in text
def vowel(text):
    vowels = "aeiuoAEIOU"
    print(len([letter for letter in text if letter in vowels]))
    print([letter for letter in text if letter in vowels])

vowel('papier') 

6. Write a Python program that counts the number of leap years within the range of years. Ranges of years should be accepted as strings.
def test(r_years):
    start_year, end_year = map(int, r_years.split('-'))
    return sum(is_leap_year(year) for year in range(start_year, end_year+1))
def is_leap_year(y):
    if y % 400 == 0:
        return True
    if y % 100 == 0:
        return False
    if y % 4 == 0:
        return True
    else:
        return False
text = "1981-1991"

print("Range of years:", text)
print("Count the number of leap years within the said range:")
print(test(text))

text = "2000-2020"
print("Range of years:", text)
print("Count the number of leap years within the said range:")
print(test(text)) 

7.Write a Python program to remove punctuation from a given string.
def remove_punctuations(text):
    for c in string.punctuation:
        text = text.replace(c, "")
    return text
text = "String! With. Punctuation?"
print("Original text:", text)
result = remove_punctuations(text)
print("After removing:", result)

8.Write a Python program to extract numbers from a given string.
str1="14 kodd 231"
def only_num(str1):
    result = [int(str1) for str1 in str1.split() if str1.isdigit()]
    return result
print("Original string:", str1)
print("Numbers in String:", only_num(str1))

9.Write a Python program to find the smallest and largest words in a given string.
def znajdz_min_i_max_slowa(str1):
    slowa = str1.split()
    najmniejsze_slowo = None
    najwieksze_slowo = None
    for slowo in slowa:
        if najmniejsze_slowo is None or len(slowo) < len(najmniejsze_slowo):
            najmniejsze_slowo = slowo
        if najwieksze_slowo is None or len(slowo) > len(najwieksze_slowo):
            najwieksze_slowo = slowo
    
    return najmniejsze_slowo, najwieksze_slowo
str1 = "pas kanarek ryba przypadek"
min_slowo, max_slowo = znajdz_min_i_max_slowa(str1)
print("Najmniejsze słowo:", min_slowo)
print("Największe słowo:", max_slowo)

10.Write a Python program that concatenates uncommon characters from two strings.
def uncommon_chars(s1, s2):

  set1 = set(s1)
  set2 = set(s2)

  common_chars = list(set1 & set2) 
  result = [ch for ch in s1 if ch not in common_chars] + [ch for ch in s2 if ch not in common_chars]

  return(''.join(result))

s1 = 'abcdpqr' 
s2 = 'xyzabcd'
print("Original Substrings:",s1+"",s2)
print("After concatenating uncommon characters:", uncommon_chars(s1, s2))


11.Write a Python program to compute the sum of the digits in a given string.
def sum_digits_string(str1):
    sum_digit = 0

    for char in str1:
        if char.isdigit():
            digit = int(char)
            sum_digit += digit
    return sum_digit
result1 = sum_digits_string("1kot43nic5")
print("Suma cyfr: ", result1) 

12.Write a Python program to capitalize the first and last letters of each word in a given string.
def first_last_letters(str1):
    str1 = result = str1.title()
    result = ""

    for word in str1.split():
        result += word[:-1] + word[-1].upper() + " "
    return result[:-1]
print(first_last_letters("aaaaaaaaaa")) 

13.​​Write a Python program to convert a given string into a list of words.
str1 = "Napisz program w języku Python konwertujący podany ciąg znaków na listę słów.i"
print(str1.split(' '))

14.Write a Python program to swap commas and dots in a string.
amount = "32.054,23"
maketrans = amount.maketrans
new_amount = amount.translate(maketrans(',.', '.,'))
print("Before ",amount ,"After ", new_amount) 

15.Write a Python program to remove spaces from a given string.
def remove_spaces(str1):
    str1 = str1.replace(' ', '')
    return str1  
print(remove_spaces("a b c"))

16.Write a Python program to print the following integers with '*' to the right of the specified width.
x = 154
print("Original Number: ", x)
print("Formatted Number: "+"{:*< 7d}".format(x))

17.Write a Python program to print the following integers with zeros to the left of the specified width.
x = 154
print("Original Number: ", x)
print("Formatted Number: "+"{:0> 7d}".format(x))


18.Write a Python program to print the following positive and negative numbers with no decimal places.
x = 3.543
print("Original Number: ", x)
print("Formatted Number with no decimal places: "+"{:.0f}".format(x))


19.Write a Python program to print the following numbers up to 2 decimal places.
x = 3.543
print("Original Number: ", x)
print("Formatted Number with no decimal places: "+"{:.2f}".format(x))

20. Write a Python program to print the following numbers up to 2 decimal places with a sign.
x = 3.543
print("Original Number: ", x)
print("Formatted Number with no decimal places: "+"{:+.2f}".format(x))